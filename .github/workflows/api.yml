name: Freezit API CI testing
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Label of the container job
  postgres_docker:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    # container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres-user
          POSTGRES_PASSWORD: postgres-password
          POSTGRES_DB: postgres-test-db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5342

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
        working-directory: api
        env:
          DATABASE_URL: postgres://postgres-user:postgres-password@127.0.0.1/postgres-test-db?connect_timeout=10
          DATABASE_BASE_URL: postgres://postgres-user:postgresd-password@127.0.0.1
      - name: Run tests
        run: cargo test --verbose
        working-directory: api
        env:
          DATABASE_URL: postgres://postgres-user:postgres-password@127.0.0.1/postgres-test-db?connect_timeout=10
          DATABASE_BASE_URL: postgres://postgres-user:postgresd-password@127.0.0.1
